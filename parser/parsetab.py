
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'INTEGER STRING_LITERAL COLON NAME COMMA LCURL RCURL LBRAC RBRAC LPAREN RPAREN DOT SEMICOLON BOOLEAN EXTENDS IMPORT REF\n        start : doc post_parsing\n        \n        doc : dict_def\n        \n        doc : global_stmts SEMICOLON dict_def\n        \n        global_stmts : global_stmt SEMICOLON\n                     | global_stmt SEMICOLON global_stmts\n        \n        global_stmt : import_stmt\n        \n        import_stmt : IMPORT dotted_name\n        \n        dotted_name : NAME\n                    | NAME DOT dotted_name\n        \n        dict_def : empty_dict_def\n                 | non_empty_dict_def\n        \n        empty_dict_def : LCURL RCURL\n        \n        non_empty_dict_def : LCURL dict_entries RCURL\n        \n        dict_entries : dict_entry\n                     | dict_entry COMMA\n                     | dict_entry COMMA dict_entries\n        \n        dict_entry : dict_key COLON dict_val\n        \n        dict_key : STRING_LITERAL\n                 | BOOLEAN\n                 | number\n                 | ref\n        \n        ref : REF lookup\n        \n        lookup : LBRAC dict_key RBRAC\n               | LBRAC dict_key RBRAC lookup\n        \n        dict_val : STRING_LITERAL\n                 | BOOLEAN\n                 | number\n                 | ref\n                 | dict_def\n                 | list_def\n        \n        list_def : LBRAC RBRAC\n                 | LBRAC list_entries RBRAC\n        \n        list_entries : dict_val\n                     | dict_val COMMA\n                     | dict_val COMMA list_entries\n        \n        number : INTEGER\n        \n        number : INTEGER DOT INTEGER\n        \n        post_parsing :\n        '
    
_lr_action_items = {'LCURL':([0,12,30,43,52,],[8,8,8,8,8,]),'IMPORT':([0,13,],[10,10,]),'$end':([1,2,3,5,6,11,14,26,28,],[0,-38,-2,-10,-11,-1,-12,-3,-13,]),'SEMICOLON':([4,7,9,13,24,25,27,46,],[12,13,-6,-4,-7,-8,-5,-9,]),'COMMA':([5,6,14,16,22,28,32,36,37,38,39,40,41,42,44,47,49,50,51,53,],[-10,-11,-12,29,-36,-13,-22,-17,-25,-26,-27,-28,-29,-30,-37,-31,52,-23,-32,-24,]),'RCURL':([5,6,8,14,15,16,22,28,29,32,35,36,37,38,39,40,41,42,44,47,50,51,53,],[-10,-11,14,-12,28,-14,-36,-13,-15,-22,-16,-17,-25,-26,-27,-28,-29,-30,-37,-31,-23,-32,-24,]),'RBRAC':([5,6,14,18,19,20,21,22,28,32,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,],[-10,-11,-12,-18,-19,-20,-21,-36,-13,-22,-25,-26,-27,-28,-29,-30,47,-37,50,-31,51,-33,-23,-32,-34,-24,-35,]),'STRING_LITERAL':([8,29,30,33,43,52,],[18,18,37,18,37,37,]),'BOOLEAN':([8,29,30,33,43,52,],[19,19,38,19,38,38,]),'INTEGER':([8,29,30,31,33,43,52,],[22,22,22,44,22,22,22,]),'REF':([8,29,30,33,43,52,],[23,23,23,23,23,23,]),'NAME':([10,34,],[25,25,]),'COLON':([17,18,19,20,21,22,32,44,50,53,],[30,-18,-19,-20,-21,-36,-22,-37,-23,-24,]),'DOT':([22,25,],[31,34,]),'LBRAC':([23,30,43,50,52,],[33,43,43,33,43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'doc':([0,],[2,]),'dict_def':([0,12,30,43,52,],[3,26,41,41,41,]),'global_stmts':([0,13,],[4,27,]),'empty_dict_def':([0,12,30,43,52,],[5,5,5,5,5,]),'non_empty_dict_def':([0,12,30,43,52,],[6,6,6,6,6,]),'global_stmt':([0,13,],[7,7,]),'import_stmt':([0,13,],[9,9,]),'post_parsing':([2,],[11,]),'dict_entries':([8,29,],[15,35,]),'dict_entry':([8,29,],[16,16,]),'dict_key':([8,29,33,],[17,17,45,]),'number':([8,29,30,33,43,52,],[20,20,39,20,39,39,]),'ref':([8,29,30,33,43,52,],[21,21,40,21,40,40,]),'dotted_name':([10,34,],[24,46,]),'lookup':([23,50,],[32,53,]),'dict_val':([30,43,52,],[36,49,49,]),'list_def':([30,43,52,],[42,42,42,]),'list_entries':([43,52,],[48,54,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> doc post_parsing','start',2,'p_start','yacc.py',48),
  ('doc -> dict_def','doc',1,'p_dict_doc','yacc.py',53),
  ('doc -> global_stmts SEMICOLON dict_def','doc',3,'p_doc_with_imports','yacc.py',59),
  ('global_stmts -> global_stmt SEMICOLON','global_stmts',2,'p_global_stmts','yacc.py',65),
  ('global_stmts -> global_stmt SEMICOLON global_stmts','global_stmts',3,'p_global_stmts','yacc.py',66),
  ('global_stmt -> import_stmt','global_stmt',1,'p_global_stmt','yacc.py',71),
  ('import_stmt -> IMPORT dotted_name','import_stmt',2,'p_import_stmt','yacc.py',76),
  ('dotted_name -> NAME','dotted_name',1,'p_dotted_name','yacc.py',81),
  ('dotted_name -> NAME DOT dotted_name','dotted_name',3,'p_dotted_name','yacc.py',82),
  ('dict_def -> empty_dict_def','dict_def',1,'p_dict_def','yacc.py',87),
  ('dict_def -> non_empty_dict_def','dict_def',1,'p_dict_def','yacc.py',88),
  ('empty_dict_def -> LCURL RCURL','empty_dict_def',2,'p_empty_dict_def','yacc.py',94),
  ('non_empty_dict_def -> LCURL dict_entries RCURL','non_empty_dict_def',3,'p_non_empty_dict_def','yacc.py',100),
  ('dict_entries -> dict_entry','dict_entries',1,'p_dict_entries','yacc.py',107),
  ('dict_entries -> dict_entry COMMA','dict_entries',2,'p_dict_entries','yacc.py',108),
  ('dict_entries -> dict_entry COMMA dict_entries','dict_entries',3,'p_dict_entries','yacc.py',109),
  ('dict_entry -> dict_key COLON dict_val','dict_entry',3,'p_dict_entry','yacc.py',115),
  ('dict_key -> STRING_LITERAL','dict_key',1,'p_dict_key','yacc.py',121),
  ('dict_key -> BOOLEAN','dict_key',1,'p_dict_key','yacc.py',122),
  ('dict_key -> number','dict_key',1,'p_dict_key','yacc.py',123),
  ('dict_key -> ref','dict_key',1,'p_dict_key','yacc.py',124),
  ('ref -> REF lookup','ref',2,'p_ref','yacc.py',132),
  ('lookup -> LBRAC dict_key RBRAC','lookup',3,'p_lookup','yacc.py',139),
  ('lookup -> LBRAC dict_key RBRAC lookup','lookup',4,'p_lookup','yacc.py',140),
  ('dict_val -> STRING_LITERAL','dict_val',1,'p_dict_val','yacc.py',146),
  ('dict_val -> BOOLEAN','dict_val',1,'p_dict_val','yacc.py',147),
  ('dict_val -> number','dict_val',1,'p_dict_val','yacc.py',148),
  ('dict_val -> ref','dict_val',1,'p_dict_val','yacc.py',149),
  ('dict_val -> dict_def','dict_val',1,'p_dict_val','yacc.py',150),
  ('dict_val -> list_def','dict_val',1,'p_dict_val','yacc.py',151),
  ('list_def -> LBRAC RBRAC','list_def',2,'p_list_def','yacc.py',157),
  ('list_def -> LBRAC list_entries RBRAC','list_def',3,'p_list_def','yacc.py',158),
  ('list_entries -> dict_val','list_entries',1,'p_list_entries','yacc.py',165),
  ('list_entries -> dict_val COMMA','list_entries',2,'p_list_entries','yacc.py',166),
  ('list_entries -> dict_val COMMA list_entries','list_entries',3,'p_list_entries','yacc.py',167),
  ('number -> INTEGER','number',1,'p_integer_number','yacc.py',173),
  ('number -> INTEGER DOT INTEGER','number',3,'p_float_number','yacc.py',179),
  ('post_parsing -> <empty>','post_parsing',0,'p_finish','yacc.py',185),
]
